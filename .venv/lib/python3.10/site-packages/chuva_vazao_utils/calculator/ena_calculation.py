from typing import List, Union

from chuva_vazao_utils.entities.ena.ena import Ena
from chuva_vazao_utils.entities.ena.ena_ree import EnaRee
from chuva_vazao_utils.calendar.interval_type import IntervalType
from chuva_vazao_utils.entities.inflow.inflow import Inflow
from chuva_vazao_utils.entities.ena.ena_weekly import EnaWeekly
from chuva_vazao_utils.entities.ena.ena_factory import EnaFactory
from chuva_vazao_utils.entities.ena.ena_monthly import MonthlyEna
from chuva_vazao_utils.calculator.calculation_type import CalculationType
from chuva_vazao_utils.entities.ena.ena_ree_factory import EnaReeFactory
from chuva_vazao_utils.database_access.inflows.inflow import InflowDatabaseApi
from chuva_vazao_utils.entities.ena.ena_weekly_factory import WeeklyEnaFactory
from chuva_vazao_utils.entities.ena.ena_monthly_factory import MonthlyEnaFactory
from chuva_vazao_utils.entities.power_plant.power_plant import PowerPlant
from chuva_vazao_utils.database_access.power_plant.power_plant import PowerPlantDatabaseApi


def calculate_ena(
    inflows: Union[List[dict], List[Inflow]], power_plants: Union[List[dict], List[PowerPlant]],
    calculation_types: Union[CalculationType, List[CalculationType]], interval_type=IntervalType.DAILY,
    id_rodada_smap: Union[int, None] = None
) -> List[Ena]:
    inflows = InflowDatabaseApi.parse_from_list(inflows)
    power_plants = PowerPlantDatabaseApi.parse_from_list(power_plants)
    return EnaFactory.calculate(inflows, power_plants, calculation_types, interval_type, id_rodada_smap)


def calculate_ena_weekly(inflows: Union[List[dict], List[Inflow]], power_plants: Union[List[dict], List[PowerPlant]], id_rodada_smap: Union[int, None] = None) -> List[EnaWeekly]:
    ena_list = calculate_ena(inflows, power_plants, CalculationType.ENA_DAILY, IntervalType.WEEKLY, id_rodada_smap)
    return WeeklyEnaFactory.get_weekly_mean(ena_list)


def calculate_ena_ree(inflows: Union[List[dict], List[Inflow]], power_plants: Union[List[dict], List[PowerPlant]], id_rodada_smap: Union[int, None] = None) -> List[EnaRee]:
    power_plants = PowerPlantDatabaseApi.parse_from_list(power_plants)
    calculation_types = [CalculationType.ENA_DAILY, CalculationType.ENA_WEEKLY_REE]
    interval_type = IntervalType.WEEKLY
    ena_list = calculate_ena(inflows, power_plants, calculation_types, interval_type, id_rodada_smap)
    return EnaReeFactory.get_ree_mean(ena_list, power_plants)


def calculate_ena_monthly(inflows: Union[List[dict], List[Inflow]], power_plants: Union[List[dict], List[PowerPlant]], id_rodada_smap: Union[int, None] = None) -> List[MonthlyEna]:
    calculation_type = CalculationType.ENA_DAILY
    interval_type = IntervalType.WEEKLY
    ena_list = calculate_ena(inflows, power_plants, calculation_type, interval_type, id_rodada_smap)
    return MonthlyEnaFactory.get_monthly_mean(ena_list)
