from datetime import date
from unittest.mock import Mock, call

from chuva_vazao_utils.entities.ena.ena_weekly_factory import WeeklyEnaFactory
import pytest


@pytest.fixture
def ena_weekly_mock(mocker):
    return mocker.patch('chuva_vazao_utils.entities.ena.ena_weekly_factory.EnaWeekly')


@pytest.fixture
def semana_operativa_factory_mock(mocker):
    return mocker.patch('chuva_vazao_utils.entities.ena.ena_weekly_factory.SemanaOperativaFactory')


def test_ena_weekly_mean(ena_weekly_mock, semana_operativa_factory_mock):
    ena_1 = Mock(
        power_plant=1,
        inflow_source=2,
        origin=3,
        id_rodada_smap=123,
        time=date(2023, 1, 1),
        value=1234.5
    )
    ena_2 = Mock(
        power_plant=2,
        inflow_source=2,
        origin=3,
        id_rodada_smap=123,
        time=date(2023, 1, 2),
        value=5432.1
    )
    ena_list = [ena_1, ena_2]

    semana_operativa_factory_mock.create_from_date.return_value = 'op_week'

    result = WeeklyEnaFactory.get_weekly_mean(ena_list)

    assert len(result) == 2
    ena_weekly_mock.assert_has_calls([
        call(
            power_plant=1,
            inflow_source=2,
            origin=3,
            id_rodada_smap=123,
            op_week='op_week',
            value=1234.5
        ), call(
            power_plant=2,
            inflow_source=2,
            origin=3,
            id_rodada_smap=123,
            op_week='op_week',
            value=5432.1
        )
    ])
