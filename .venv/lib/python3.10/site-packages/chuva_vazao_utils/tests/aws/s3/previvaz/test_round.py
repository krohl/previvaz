import pytest
from datetime import date, datetime
from pytest_mock import MockerFixture
from unittest.mock import Mock

from chuva_vazao_utils.aws.s3.previvaz.round import PrevivazFilesApi
from chuva_vazao_utils.entities.previvaz.round import PrevivazRound
from chuva_vazao_utils.entities.smap.round import SmapRound

MODULE_PATH = 'chuva_vazao_utils.aws.s3.previvaz.round'


@pytest.fixture
def mock_oper_week() -> Mock:
    return Mock(
        week='mock_week',
        begin_date=date(2022, 12, 17),
        year=2022,
        month=12,
        end_date=date(2022, 12, 23),
        num_rev='num_rev',
    )


@pytest.fixture
def mock_previvaz_round(mock_oper_week: Mock) -> PrevivazRound:
    mock_model = Mock()
    mock_model.name = 'mock_model'

    smap_round = SmapRound(1, mock_model, mock_oper_week, False, False, 99, datetime(2022, 12, 24, 10, 1))
    return PrevivazRound(smap_round)


#
# PrevivazS3FilesApi
#
def test_s3_paths(mocker: MockerFixture, mock_previvaz_round: PrevivazRound):
    # Given
    s3_file_cls = mocker.patch(f'{MODULE_PATH}.S3File')

    # Observed Inflows file
    # When/Then
    PrevivazFilesApi.get_observed_inflows_file(mock_previvaz_round)
    s3_file_cls.assert_called_once_with(
        'previvaz/2022/12/24/mock_model/mock_week/rodada_smap/99/entrada/',
        'vazao_observada.json',
        'esfera-inteligencia-preco-mock-bucket'
    )
    s3_file_cls.reset_mock()

    # Forecast Inflows file
    # When/Then
    PrevivazFilesApi.get_forecast_inflows_file(mock_previvaz_round)
    s3_file_cls.assert_called_once_with(
        'previvaz/2022/12/24/mock_model/mock_week/rodada_smap/99/entrada/',
        'vazao_smap.json',
        'esfera-inteligencia-preco-mock-bucket'
    )
    s3_file_cls.reset_mock()

    # Pluvia Inflows file
    # When/Then
    PrevivazFilesApi.get_pluvia_inflows_file(mock_previvaz_round)
    s3_file_cls.assert_called_once_with(
        'previvaz/2022/12/24/mock_model/mock_week/rodada_smap/99/entrada/',
        'vazao_pluvia.json',
        'esfera-inteligencia-preco-mock-bucket'
    )
    s3_file_cls.reset_mock()

    # Input inflows file (vazoes_entrada.txt)
    # When/Then
    PrevivazFilesApi.get_input_inflows_file(mock_previvaz_round)
    s3_file_cls.assert_called_once_with(
        'previvaz/2022/12/24/mock_model/mock_week/rodada_smap/99/entrada/',
        'vazoes_entrada.txt',
        'esfera-inteligencia-preco-mock-bucket'
    )
    s3_file_cls.reset_mock()

    # Output inflows file
    # When/Then
    PrevivazFilesApi.get_output_inflows_file(mock_previvaz_round)
    s3_file_cls.assert_called_once_with(
        'previvaz/2022/12/24/mock_model/mock_week/rodada_smap/99/saida/',
        'vazoes_saida',
        'esfera-inteligencia-preco-mock-bucket'
    )
    s3_file_cls.reset_mock()

    # Output postos file
    # When/Then
    PrevivazFilesApi.get_output_postos_file(mock_previvaz_round)
    s3_file_cls.assert_called_once_with(
        'previvaz/2022/12/24/mock_model/mock_week/rodada_smap/99/saida/',
        'postos_saida.txt',
        'esfera-inteligencia-preco-mock-bucket'
    )
    s3_file_cls.reset_mock()

    # Prevs file
    # When/Then
    PrevivazFilesApi.get_prevs_file(mock_previvaz_round)
    s3_file_cls.assert_called_once_with(
        'previvaz/2022/12/24/mock_model/mock_week/rodada_smap/99/saida/',
        '202212-prevs.rvnum_rev',
        'esfera-inteligencia-preco-mock-bucket'
    )
    s3_file_cls.reset_mock()
