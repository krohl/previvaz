import pytest
from chuva_vazao_utils.exceptions import MessageTypeError
from chuva_vazao_utils.messenger.message_type import MessageType
from chuva_vazao_utils.messenger.messenger import Messenger
from freezegun import freeze_time


@freeze_time('2021-05-15 09:00:00')
def test_create_success_msg():
    message = Messenger.create_msg(
        MessageType.SUCCESS,
        'Process test'
    )

    assert message == {
        'status_code': 200,
        'type': 'SUCCESS',
        'timestamp': '2021-05-15T06:00:00-03:00',
        'message': 'Process test'
    }


@freeze_time('2021-05-15 09:00:00')
def test_create_error_msg():
    message = Messenger.create_msg(
        MessageType.ERROR,
        'Error test'
    )

    assert message == {
        'status_code': 500,
        'type': 'ERROR',
        'timestamp': '2021-05-15T06:00:00-03:00',
        'message': 'Error test'
    }


@freeze_time('2021-05-15 09:00:00')
def test_create_success_msg_additional_fields():
    additional_fields = {
        'new_field_1': 1,
        'new_field_2': 2,
        'new_field_3': 3,
    }

    message = Messenger.create_msg(
        MessageType.SUCCESS,
        'Process test',
        **additional_fields
    )

    assert message == {
        'status_code': 200,
        'type': 'SUCCESS',
        'timestamp': '2021-05-15T06:00:00-03:00',
        'message': 'Process test',
        'new_field_1': 1,
        'new_field_2': 2,
        'new_field_3': 3,
    }


@freeze_time('2021-05-15 09:00:00')
def test_create_multi_messages():
    previous_message = {
        'status_code': 200,
        'type': 'SUCCESS',
        'timestamp': '2021-05-15T05:00:00-03:00',
        'message': 'Fetch test data',
        'module': 'smap'
    }

    message = Messenger.create_msg(
        MessageType.ERROR,
        'Process Error test',
        module='post-processing',
        previous=previous_message
    )

    assert message == {
        'status_code': 500,
        'type': 'ERROR',
        'timestamp': '2021-05-15T06:00:00-03:00',
        'message': 'Process Error test',
        'module': 'post-processing',
        'previous': {
            'status_code': 200,
            'type': 'SUCCESS',
            'timestamp': '2021-05-15T05:00:00-03:00',
            'message': 'Fetch test data',
            'module': 'smap'
        }
    }


def test_message_type_exception():
    with pytest.raises(MessageTypeError):
        Messenger.create_msg(
            'invalid_type',
            'Process test'
        )
