import pytest
from pytest_mock import MockerFixture
from unittest.mock import MagicMock, Mock


from chuva_vazao_utils.database_access.calculation.calculation_factory import CalculationFactory
from chuva_vazao_utils.entities.calculation.calculation import CalculationWithoutEval

MODULE_PATH = 'chuva_vazao_utils.database_access.calculation.calculation_factory'


@pytest.fixture(autouse=True)
def mock_pp_api(mocker: MockerFixture) -> MagicMock:
    return mocker.patch(f'{MODULE_PATH}.PowerPlantDatabaseApi')


def test_factory_not_implemented_calculation(mock_pp_api: MagicMock):
    # Given
    mock_pp = Mock(id=100)
    mock_pp_api.fetch_by_id.return_value = mock_pp

    bd_entity = {
        'id_calculation_type': -1,
        'id_power_plant': mock_pp.id,
        'calculation': '{}'
    }
    # When
    calculation = CalculationFactory.create_calculation(bd_entity)
    # Then
    assert calculation == CalculationWithoutEval(mock_pp, {}, -1)
