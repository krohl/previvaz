from unittest.mock import MagicMock

from chuva_vazao_utils.database_access.rain.rain_model import RainModelDatabaseApi
from chuva_vazao_utils.entities.rain.rain_model import ForecastRainModel, ObservedRainModel

MODULE_PATH = 'chuva_vazao_utils.database_access.rain.base_rain_entity'


def test_instantiation():
    # Teste garante que classe pode ser instanciada e nenhum m√©todo abstrato deixou de ser implementado
    RainModelDatabaseApi()


def test_fetch_all(mock_select: MagicMock):
    # Given
    mock_select.return_value = [
        {
            'id_modelo_mapa': 1, 'key': 'key_1', 'filename_prefix': 'file_1', 'nome': 'model_1', 'apelido': 'mdl_1', 'is_previsao': True
        },
        {
            'id_modelo_mapa': 2, 'key': 'key_2', 'filename_prefix': 'file_2', 'nome': 'model_2', 'apelido': 'mdl_2', 'is_previsao': False
        },
    ]
    # When
    models = RainModelDatabaseApi.fetch_all()
    # Then
    assert models == [
        ForecastRainModel(_id=1, name='model_1', nickname='mdl_1', key='key_1', filename_prefix='file_1'),
        ObservedRainModel(_id=2, name='model_2', nickname='mdl_2', key='key_2', filename_prefix='file_2'),
    ]
    mock_select.assert_called_once_with(
        ['id_modelo_mapa', '`key`', 'filename_prefix', 'nome', 'apelido', 'is_previsao'],
        where={}
    )
