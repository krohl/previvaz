import logging
import sys
import time
from functools import wraps
import os

logger = logging.getLogger(__name__)
logger.setLevel(logging.INFO)


if 'local' in (os.getenv('Environment'), os.getenv('ENV')):
    logformat = logging.Formatter("[%(levelname)s] %(message)s")
    handler = logging.StreamHandler(sys.stdout)
    handler.setFormatter(logformat)
    logger.addHandler(handler)
    logger.setLevel(logging.DEBUG)


def log_process(process):
    def log_decorator(func):
        @wraps(func)
        def wrapper_logger(*args, **kwargs):
            logger.info(f'Start {process}')
            start_time = time.time()
            value = func(*args, **kwargs)
            end_process = round(time.time() - start_time, 3)
            logger.info(f'{process} finished in {end_process} sec')
            return value
        return wrapper_logger
    return log_decorator
