import json
import time

from aws_utils.services.eventbridge import EventBridge
from chuva_vazao_utils.database_access.preco_automatico import PrecoAutomatico
from chuva_vazao_utils.messenger.messenger import Messenger


class MessageSender:
    def __init__(self, id_rodada, source: str, event_bus: str, module: str) -> None:
        self.session = EventBridge()
        self.id_rodada = id_rodada
        self.source = source
        self.event_bus = event_bus
        self.module = module
        self._latest_event = self.get_latest_events()

    @property
    def latest_event(self):
        return self._latest_event

    @latest_event.setter
    def latest_event(self, latest_event):
        self._latest_event = latest_event

    def get_latest_events(self):
        events = PrecoAutomatico.select(
            columns=["evento", "cpu_date"], where={"id_rodada_smap": self.id_rodada}
        )
        valids = []
        if events:
            for event in events:
                module = json.loads(event['evento'])['module']
                if self.module != module:
                    valids.append(event)

            if len(valids) == 0:
                return None

            latest = max(valids, key=lambda x: x["cpu_date"])
            latest_event = json.loads(latest["evento"])
        else:
            latest_event = None
        return latest_event

    def send_process_event(self, msg: str, msg_type: tuple):

        message = Messenger.create_msg(
            msg_type,
            msg,
            id_rodada_smap=self.id_rodada,
            module=self.module,
            previous=self.latest_event,
        )

        self.session.add_event(
            self.event_bus, self.module, self.source, message
        )
        time.sleep(1)
        self.session.send_events()
