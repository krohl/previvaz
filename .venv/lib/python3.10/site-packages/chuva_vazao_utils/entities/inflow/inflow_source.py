from __future__ import annotations

from abc import ABC, abstractmethod
from dataclasses import dataclass
from enum import Enum
from typing import List, Union


class InflowSourceMenu(Enum):
    """IDs das fontes de dados de vazão (os mesmos IDs devem estar na base, pois eles serão utilizados nas queries)"""
    ONS = 1
    ANA = 2
    RDH = 3
    SMAP = 4
    RDH_NATU = 5
    SITES_EXTERNOS = 6
    CPINS = 7
    ESFERA = 8


@dataclass
class InflowSource:
    id: int
    name: str


class InflowSourceApi(ABC):
    @classmethod
    @abstractmethod
    def fetch_all(cls) -> List[InflowSource]:
        raise NotImplementedError()

    @classmethod
    @abstractmethod
    def fetch_by_id(cls) -> Union[InflowSource, None]:
        raise NotImplementedError()

    @classmethod
    @abstractmethod
    def fetch_by_name(cls) -> Union[InflowSource, None]:
        raise NotImplementedError()

    @classmethod
    @abstractmethod
    def fetch_inflow_source(cls, inflow_source: InflowSourceMenu) -> Union[InflowSource, None]:
        raise NotImplementedError()
