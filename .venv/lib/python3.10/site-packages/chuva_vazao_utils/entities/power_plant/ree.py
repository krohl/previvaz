from abc import ABC, abstractmethod
from dataclasses import dataclass
from typing import List, Union


@dataclass
class ReservatorioEquivalente:
    id: int
    name: str


class ReservatorioEquivalenteApi(ABC):
    @classmethod
    @abstractmethod
    def fetch_all(cls) -> List[ReservatorioEquivalente]:
        raise NotImplementedError()

    @classmethod
    @abstractmethod
    def fetch_by_id(cls, id: int) -> Union[ReservatorioEquivalente, None]:
        raise NotImplementedError()

    @classmethod
    @abstractmethod
    def fetch_by_name(cls, name: str) -> Union[ReservatorioEquivalente, None]:
        raise NotImplementedError()
