import json
from abc import ABC, abstractmethod
from typing import List, Union
from dataclasses import dataclass


@dataclass
class River:
    name: str
    order: int
    configs: dict
    id: Union[int, None] = None

    def __post_init__(self):
        self.configs = json.loads(self.configs) if self.configs else {}


class RiverApi(ABC):

    @classmethod
    @abstractmethod
    def fetch_all(cls) -> List[River]:
        raise NotImplementedError

    @classmethod
    @abstractmethod
    def fetch_by_id(cls, id: int) -> River:
        raise NotImplementedError
