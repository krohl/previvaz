from __future__ import annotations

from typing import List
from datetime import date, datetime
from dataclasses import dataclass

from chuva_vazao_utils.entities.operative_week import SemanaOperativa, SemanaOperativaFactory


@dataclass
class WeeklyValue:
    op_week: SemanaOperativa
    value: float


@dataclass
class MonthlyValue:
    month: date
    value: float


@dataclass
class TimeValue:
    time: datetime
    value: float

    @property
    def operative_week(self) -> SemanaOperativa:
        ref_date = self.time.date() if isinstance(self.time, datetime) else self.time
        return SemanaOperativaFactory.create_from_date(ref_date)


class TimeSeries:
    series: List[TimeValue]

    def __init__(self, series: List[TimeValue]) -> None:
        self.series = series

    @property
    def time_list(self) -> List[datetime]:
        return [timevalue.time for timevalue in self.series]

    @property
    def values_list(self) -> List[datetime]:
        return [timevalue.value for timevalue in self.series]

    def mean_values(self):
        return sum(self.values_list) / len(self.values_list)
