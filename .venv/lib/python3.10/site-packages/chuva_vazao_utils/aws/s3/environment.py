import os

from chuva_vazao_utils.aws.s3.exception import EnvNotSet
from chuva_vazao_utils.utils.classproperty import classproperty, classproperty_support


@classproperty_support
class Env:
    DEFAULT_ENV_KEY = 'Environment'
    CUSTOM_ENV_KEY = 'CUSTOM_ENV_CHVZ_UTILS'

    @classmethod
    def set_custom_environment(cls, custom_env: str):
        os.environ[Env.CUSTOM_ENV_KEY] = custom_env

    @classmethod
    def reset_custom_environment(cls):
        os.environ.pop(Env.CUSTOM_ENV_KEY, None)

    @classproperty
    def environment(cls) -> str:
        ENV = os.getenv(Env.CUSTOM_ENV_KEY, os.getenv(Env.DEFAULT_ENV_KEY))
        if not ENV:
            raise EnvNotSet(
                f'Para uso das funções do chuvaVazaoUtils que envolvam o S3, é preciso configurar a variável de ambiente {Env.DEFAULT_ENV_KEY}'
            )
        return ENV.lower()

    @classproperty
    def bucket_smap(cls) -> str:
        return f'esfera-smap-{cls.environment}-bucket'

    @classproperty
    def bucket_precipitation(cls) -> str:
        if cls.environment == 'prd':
            return 'esfera-inteligencia-mapas-precipitacao'
        return f'esfera-inteligencia-mapas-precipitacao-{cls.environment}-bucket'

    @classproperty
    def bucket_price(cls) -> str:
        return f'esfera-inteligencia-preco-{cls.environment}-bucket'
